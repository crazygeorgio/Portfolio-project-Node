/* Media queries */
/* Pseudo */
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.items__item, .skills {
  *zoom: 1;
}

.items__item:before, .skills:before, .items__item:after, .skills:after {
  display: table;
  content: "";
}

.items__item:after, .skills:after {
  clear: both;
}

.check-field__input[type="checkbox"] + .check-field__fake-check:after, .form__radio-list-item, .check-field__label, .check-field__input[type="checkbox"] + .check-field__fake-check, .check-field__input[type="checkbox"] + .check-field__fake-check svg, .radio-field, .radio-field__label, .radio-field__input[type="radio"] + .radio-field__fake-radio {
  display: inline-block;
  vertical-align: middle;
}

.row__col {
  display: inline-block;
  vertical-align: top;
}

.check-field__input[type="checkbox"] + .check-field__fake-check:after {
  content: "";
  height: 100%;
  width: 0;
  overflow: hidden;
}

/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/**
     * 1. Change the default font family in all browsers (opinionated).
     * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
     */
html {
  font-size: 62.5%;
  line-height: 2.4em;
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0;
}

/* HTML5 display definitions
       ========================================================================== */
/**
     * Add the correct display in IE <10.
     * Add the correct display in Edge, IE, and Firefox for `details` or `summary`.
     * Add the correct display in IE for `main`.
     */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
     * Add the correct display in IE <10.
     */
audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
     * Add the correct display and remove excess height in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
     * Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  vertical-align: baseline;
}

/**
     * Add the correct display in IE <11, Safari <8, and Firefox <22.
     * 1. Add the correct display in IE.
     */
template,
[hidden] {
  display: none;
}

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
     * Remove the outline on focused links when they are also active or hovered
     * in all browsers (opinionated).
     */
a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Firefox <40.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit;
}

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/**
     * Add the correct font style in Android <4.4.
     */
dfn {
  font-style: italic;
}

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  line-height: 1.2em;
  /* Set 1 unit of vertical rhythm on the top and bottom margins. */
  margin: 1.2em 0;
}

h2 {
  font-size: 1.5em;
  line-height: 1.6em;
  margin: 1.6em 0;
}

h3 {
  font-size: 1.17em;
  line-height: 2.05128em;
  margin: 2.05128em 0;
}

h4 {
  font-size: 1em;
  line-height: 2.4em;
  margin: 2.4em 0;
}

h5 {
  font-size: 0.83em;
  line-height: 2.89157em;
  margin: 2.89157em 0;
}

h6 {
  font-size: 0.67em;
  line-height: 3.58209em;
  margin: 3.58209em 0;
}

/**
     * Add the correct background and color in IE <10.
     */
mark {
  background-color: #ff0;
  color: #000;
}

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%;
}

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
       ========================================================================== */
/**
     * Remove the border on images inside links in IE <11.
     */
img {
  border-style: none;
}

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
       ========================================================================== */
/**
       * Set 1 unit of vertical rhythm on the top and bottom margin.
       */
blockquote {
  margin: 2.4em 40px;
}

/**
       * Address margins set differently in IE 6/7.
       */
dl,
menu,
ol,
ul {
  margin: 2.4em 0;
}

/**
         * Turn off margins on nested lists.
         */
ol ol,
ol ul,
ul ol,
ul ul {
  margin: 0;
}

dd {
  margin: 0 0 0 40px;
}

/**
       * Address paddings set differently in IE 6/7.
       */
menu,
ol,
ul {
  padding: 0 0 0 40px;
}

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 2.4em 40px;
}

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
       * Set 1 unit of vertical rhythm on the top and bottom margin.
       */
p,
pre {
  margin: 2.4em 0;
}

pre {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
       ========================================================================== */
/**
     * Known issues:
     * - By default, Chrome on OS X and Safari on OS X allow very limited styling of
     *   select, unless a border property is set. The default font weight on
     *   optgroup elements cannot safely be changed in Chrome on OSX and Safari on
     *   OS X.
     * - It is recommended that you do not style checkbox and radio inputs as
     *   Firefox's implementation does not respect box-sizing, padding, or width.
     * - Certain font size values applied to number inputs cause the cursor style of
     *   the decrement button to change from default to text.
     * - The search input is not fully stylable by default. In Chrome and Safari on
     *   OSX/iOS you can't control font, padding, border, or background. In Chrome
     *   and Safari on Windows you can't control border properly. It will apply
     *   border-width but will only show a border color (which cannot be controlled)
     *   for the outer 1px of that border. Applying -webkit-appearance: textfield
     *   addresses these issues without removing the benefits of search inputs (e.g.
     *   showing past searches). Safari (but not Chrome) will clip the cancel button
     *   on when it has padding (and textfield appearance).
     */
/**
     * 1. Change font properties to `inherit` in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     * 3. Address `font-family` inconsistency between `textarea` and other form in IE 7
     * 4. Improve appearance and consistency with IE 6/7.
     */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible;
}

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible;
}

/**
     * 1. Add the correct box sizing in IE <11.
     * 2. Remove the padding in IE <11.
     * 3. Remove excess padding in IE 7.
     *    Known issue: excess padding remains in IE 6.
     */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
       */
}

[type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
     * Correct the text style of placeholders in Chrome, Edge, and Safari.
     */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
     * Change the border, margin, and padding in all browsers (opinionated).
     */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     * 4. Correct alignment displayed oddly in IE 6/7.
     */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  white-space: normal;
  /* 1 */
  color: inherit;
  /* 2 */
  padding: 0;
  /* 3 */
}

/**
     * Restore the font weight unset by a previous rule.
     */
optgroup {
  font-weight: bold;
}

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto;
}

/* Generated by Font Squirrel (https://www.fontsquirrel.com) on September 30, 2016 */
@font-face {
  font-family: 'Roboto Bold';
  src: url("../fonts/roboto-bold-webfont.eot");
  src: url("../fonts/roboto-bold-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/roboto-bold-webfont.woff2") format("woff2"), url("../fonts/roboto-bold-webfont.woff") format("woff"), url("../fonts/roboto-bold-webfont.ttf") format("truetype"), url("../fonts/roboto-bold-webfont.svg#robotobold") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Roboto Bold Italic';
  src: url("../fonts/roboto-bolditalic-webfont.eot");
  src: url("../fonts/roboto-bolditalic-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/roboto-bolditalic-webfont.woff2") format("woff2"), url("../fonts/roboto-bolditalic-webfont.woff") format("woff"), url("../fonts/roboto-bolditalic-webfont.ttf") format("truetype"), url("../fonts/roboto-bolditalic-webfont.svg#robotobold_italic") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Roboto Italic';
  src: url("../fonts/roboto-italic-webfont.eot");
  src: url("../fonts/roboto-italic-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/roboto-italic-webfont.woff2") format("woff2"), url("../fonts/roboto-italic-webfont.woff") format("woff"), url("../fonts/roboto-italic-webfont.ttf") format("truetype"), url("../fonts/roboto-italic-webfont.svg#robotoitalic") format("svg");
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: 'Roboto Light';
  src: url("../fonts/roboto-light-webfont.eot");
  src: url("../fonts/roboto-light-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/roboto-light-webfont.woff2") format("woff2"), url("../fonts/roboto-light-webfont.woff") format("woff"), url("../fonts/roboto-light-webfont.ttf") format("truetype"), url("../fonts/roboto-light-webfont.svg#robotolight") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Roboto Light Italic';
  src: url("../fonts/roboto-lightitalic-webfont.eot");
  src: url("../fonts/roboto-lightitalic-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/roboto-lightitalic-webfont.woff2") format("woff2"), url("../fonts/roboto-lightitalic-webfont.woff") format("woff"), url("../fonts/roboto-lightitalic-webfont.ttf") format("truetype"), url("../fonts/roboto-lightitalic-webfont.svg#robotolight_italic") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Roboto Medium';
  src: url("../fonts/roboto-medium-webfont.eot");
  src: url("../fonts/roboto-medium-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/roboto-medium-webfont.woff2") format("woff2"), url("../fonts/roboto-medium-webfont.woff") format("woff"), url("../fonts/roboto-medium-webfont.ttf") format("truetype"), url("../fonts/roboto-medium-webfont.svg#robotomedium") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Roboto Medium Italic';
  src: url("../fonts/roboto-mediumitalic-webfont.eot");
  src: url("../fonts/roboto-mediumitalic-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/roboto-mediumitalic-webfont.woff2") format("woff2"), url("../fonts/roboto-mediumitalic-webfont.woff") format("woff"), url("../fonts/roboto-mediumitalic-webfont.ttf") format("truetype"), url("../fonts/roboto-mediumitalic-webfont.svg#robotomedium_italic") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Roboto Regular';
  src: url("../fonts/roboto-regular-webfont.eot");
  src: url("../fonts/roboto-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/roboto-regular-webfont.woff2") format("woff2"), url("../fonts/roboto-regular-webfont.woff") format("woff"), url("../fonts/roboto-regular-webfont.ttf") format("truetype"), url("../fonts/roboto-regular-webfont.svg#robotoregular") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Sansus Webissimo Regular';
  src: url("../fonts/sansus-webissimo-regular-webfont.eot");
  src: url("../fonts/sansus-webissimo-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/sansus-webissimo-regular-webfont.woff2") format("woff2"), url("../fonts/sansus-webissimo-regular-webfont.woff") format("woff"), url("../fonts/sansus-webissimo-regular-webfont.ttf") format("truetype"), url("../fonts/sansus-webissimo-regular-webfont.svg#sansus_webissimoregular") format("svg");
  font-weight: normal;
  font-style: normal;
}

html,
body {
  height: 100%;
}

html {
  font-size: 10px;
  line-height: 1.5;
}

body {
  font-family: "Roboto Regular", sans-serif;
  background: -webkit-linear-gradient(315deg, #4a884a 0%, #336633 20%, #336633 20%, #4a884a 40%, #336633 60%, #4a884a 80%, #336633 100%);
  background: linear-gradient(135deg, #4a884a 0%, #336633 20%, #336633 20%, #4a884a 40%, #336633 60%, #4a884a 80%, #336633 100%);
}

img {
  max-width: 100%;
  width: auto;
  height: auto;
  -ms-interpolation-mode: bicubic;
}

::-moz-selection {
  background-color: #608350;
  color: #fff;
  text-shadow: none;
}

::selection {
  background-color: #608350;
  color: #fff;
  text-shadow: none;
}

.row {
  font-size: 0;
}

.row__col {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 2rem 0;
  width: 100%;
}

.row__col_w50 {
  width: 50%;
}

.row__col_w50.row__col_with-margin {
  width: 49%;
  margin: 0 0 0 2%;
}

.row__col_w50.row__col_with-margin:nth-child(2n-1) {
  margin: 0;
}

.row__col_w33 {
  width: 33.33%;
}

.row__col_w33.row__col_with-margin {
  width: 32%;
  margin: 0 0 0 2%;
}

.row__col_w33.row__col_with-margin:nth-child(3n-2) {
  margin: 0;
}

@media (max-width: 768px) {
  .row__col_tablet-full-width {
    display: block;
    width: auto;
    padding: 0;
  }
}

.row__col_tablet-full-width:first-child {
  background: #ebefe2;
}

.items {
  list-style: none;
  display: block;
  padding: 0;
  background: #fff;
  -webkit-border-radius: 1rem;
          border-radius: 1rem;
  overflow: hidden;
  line-height: 0;
}

.items__item {
  display: block;
  position: relative;
  padding: .6rem;
  border-top: 1px dotted #cccccc;
  -webkit-transition: background-color .2s;
  transition: background-color .2s;
}

.items__item:first-child {
  border: 0;
}

.items__item:hover {
  background: #fafafa;
}

.items__item-name {
  color: #666;
  text-decoration: none;
  -webkit-transition: color .2s;
  transition: color .2s;
  font: 1.4rem/1.6 'Roboto Medium', Arial, sans-serif;
}

.items__item-name:hover {
  color: #333;
}

.items__item-descr {
  color: #ccc;
  text-decoration: none;
  display: inline-block;
  margin: 0 0 0 .5rem;
}

.items__item-btns {
  float: right;
  display: block;
}

.items__item-btn {
  margin-left: .6rem;
}

.items__item-btn:first-child {
  margin-left: 0;
}

.page {
  position: relative;
  overflow: hidden;
  min-height: 100%;
  background: #f4f5f0;
}

.page__header {
  display: table;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: 100%;
  padding: 3rem;
  position: relative;
  z-index: 2;
  background: #78a165;
}

.page__header-left {
  display: table-cell;
  height: 100%;
  text-align: left;
  vertical-align: middle;
}

.page__header-right {
  display: table-cell;
  height: 100%;
  text-align: right;
  vertical-align: middle;
}

.page__header-back-link {
  font: 1.6rem "Roboto Medium", Arial, sans-serif;
  -webkit-transition: opacity .2s;
  transition: opacity .2s;
  opacity: .7;
  color: #fff;
}

.page__header-back-link:hover {
  opacity: 1;
}

.page__header-title {
  font: 2.8rem "Roboto Bold", Arial, sans-serif;
  margin: 0;
  color: #fff;
}

.page__main {
  position: relative;
  z-index: 2;
}

.page__title {
  font: 2.8rem 'Roboto Medium', Arial, sans-serif;
  margin: 0 0 2rem;
  color: #444;
}

.page__subtitle {
  font: 1.8rem 'Roboto Medium', Arial, sans-serif;
  margin: 0 0 1rem;
  color: #444;
}

.page_full-scr {
  display: table;
  width: 100%;
  height: 100%;
  background: url("../img/page_main-background.jpg") fixed no-repeat center center/cover;
  background-size: cover;
}

.page_full-light:after {
  content: "";
  display: block;
  position: absolute;
  z-index: 1;
  left: 0;
  top: 0;
  height: 100%;
  min-height: 100%;
  width: 100%;
  background: rgba(255, 255, 255, 0.75);
}

.skills {
  font-size: 0;
}

.skills__category {
  display: inline-block;
  vertical-align: top;
  display: table;
  table-layout: fixed;
  float: left;
  margin: 0 3rem 3rem 0;
}

.skills__category-title {
  font: 1.6rem 'Roboto Bold', Arial, sans-serif;
  color: #444;
}

.skills__item {
  display: table-row;
}

.skills__item-name, .skills__item-val, .skills__item-percent {
  display: table-cell;
  vertical-align: middle;
  padding: 1rem;
}

.skills__item-name, .skills__item-percent {
  font-size: 1.6rem;
}

.skills__item-val {
  width: 4rem;
  padding: 1rem 0;
}

.skills__item-val input {
  text-align: center;
}

.skills__btn.skills__btn {
  clear: both;
  text-align: left;
}

.tabs__btns {
  background: #ebebeb;
  list-style: none;
  display: none;
  display: block;
  font-size: 0;
  padding: 0;
}

.tabs__btns-item {
  display: inline-block;
  vertical-align: top;
  border-right: .2rem solid #fff;
}

.tabs__btns-item-lnk {
  display: block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  min-width: 18rem;
  padding: 0 1rem;
  height: 6rem;
  font: normal 1.6rem/6rem 'Roboto Medium', Arial, sans-serif;
  text-decoration: none;
  color: #666;
  text-align: center;
  -webkit-transition: background-color .2s, color .2s;
  transition: background-color .2s, color .2s;
}

.tabs__btns-item-lnk:hover {
  background: #e3e3e3;
}

.tabs__btns-item-lnk_active, .tabs__btns-item-lnk_active:hover {
  color: #5db722;
  background: #fdfdfd;
}

.tabs__content {
  padding: 3rem;
}

.preloader {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 9999;
  background: #6c9c5a;
  font-size: 1.2rem;
  color: #fff;
  -webkit-transition: opacity 0.75s ease-in, visibility 0s linear 0s;
  transition: opacity 0.75s ease-in, visibility 0s linear 0s;
}

.preloader__wrap {
  display: block;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  width: 8em;
  margin-left: -4em;
}

.preloader__progress {
  height: 4.2em;
  line-height: 4.2em;
  margin: 0 0 -4.2em;
  text-align: center;
}

.preloader__progress-text {
  font-size: 1.2em;
}

.preloader__pic {
  height: 9.5em;
  width: 8em;
}

.preloader__pic svg {
  width: 100%;
  height: 100%;
}

.preloader__pic svg path {
  stroke-width: .25em;
  stroke: CurrentColor;
  stroke-dasharray: 100 100;
  stroke-dashoffset: 0;
  -webkit-animation-name: curves;
          animation-name: curves;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
  -webkit-animation-duration: 3s;
          animation-duration: 3s;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}

.preloader__pic svg path:nth-child(1) {
  -webkit-animation-timing-function: cubic-bezier(0.25, 0, 0.25, 1);
          animation-timing-function: cubic-bezier(0.25, 0, 0.25, 1);
}

.preloader__pic svg path:nth-child(2) {
  -webkit-animation-timing-function: cubic-bezier(0.75, 0.5, 0.25, 1);
          animation-timing-function: cubic-bezier(0.75, 0.5, 0.25, 1);
}

.preloader__pic svg path:nth-child(3) {
  -webkit-animation-timing-function: cubic-bezier(0.8, 0, 0.1, 1);
          animation-timing-function: cubic-bezier(0.8, 0, 0.1, 1);
}

.preloader_hidden {
  -webkit-transition: opacity 0.75s, visibility 0s linear 0.75s;
  transition: opacity 0.75s, visibility 0s linear 0.75s;
  opacity: 0;
  visibility: hidden;
}

.preloader_hidden .preloader__pic svg path {
  -webkit-animation-iteration-count: 1;
          animation-iteration-count: 1;
}

@-webkit-keyframes curves {
  from {
    stroke-dasharray: 100 100;
    stroke-dashoffset: 100;
  }
  to {
    stroke-dasharray: 100 100;
    stroke-dashoffset: -100;
  }
}

@keyframes curves {
  from {
    stroke-dasharray: 100 100;
    stroke-dashoffset: 100;
  }
  to {
    stroke-dasharray: 100 100;
    stroke-dashoffset: -100;
  }
}

.form {
  position: relative;
  overflow: hidden;
}

.form__title {
  padding: 1.3rem 0 3.1rem;
  color: #fff;
}

@media (max-width: 480px) {
  .form__title {
    padding: 1.1rem 0 1.7rem;
  }
}

.form__title_green {
  color: #566358;
}

.form__body {
  padding: 2rem;
  text-align: center;
}

.form__body_bottom-padding {
  padding-bottom: 4.3rem;
}

.form__row {
  line-height: 1;
  position: relative;
  display: block;
  margin: 0 0 2rem;
  text-align: center;
  color: rgba(255, 255, 255, 0.8);
}

.form__row:last-child {
  margin: 0;
}

.form__row-title {
  font-family: "Roboto Bold", sans-serif;
  font-size: 1.6rem;
  margin: -.2rem 0 1.1rem;
}

.form__btns {
  margin: -.3rem 0 0;
  overflow: hidden;
  -webkit-border-bottom-right-radius: .5rem;
          border-bottom-right-radius: .5rem;
  -webkit-border-bottom-left-radius: .5rem;
          border-bottom-left-radius: .5rem;
}

.form__btn {
  text-align: center;
}

.form__radio-list {
  font-size: 0;
}

.form__radio-list-item {
  margin: 0 3.9rem 0 0;
}

.form__radio-list-item:last-child {
  margin: 0;
}

.form__tip {
  display: block;
  font-size: 1.2rem;
  line-height: 1.2rem;
}

.form__tip-message {
  display: inline-block;
  padding: .5rem;
  -webkit-border-radius: .5rem;
          border-radius: .5rem;
  margin-top: .5rem;
  color: #fff;
  background: rgba(204, 0, 0, 0.85);
}

.form__wrap-blur {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: -1;
  -webkit-filter: blur(20px);
          filter: blur(20px);
  -webkit-transform: translateZ(0);
          transform: translateZ(0);
  background-image: url(../img/footer_1800.jpg);
  background-repeat: no-repeat;
  -webkit-border-radius: .5rem;
          border-radius: .5rem;
}

.form__wrap-blur_alt {
  background: rgba(255, 255, 255, 0.4);
}

@-webkit-keyframes showssTip {
  0% {
    -webkit-transform: translate3d(0, 1rem, 0);
            transform: translate3d(0, 1rem, 0);
    opacity: 0;
    visibility: hidden;
  }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
    opacity: 1;
    visibility: visible;
  }
}

@keyframes showssTip {
  0% {
    -webkit-transform: translate3d(0, 1rem, 0);
            transform: translate3d(0, 1rem, 0);
    opacity: 0;
    visibility: hidden;
  }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
    opacity: 1;
    visibility: visible;
  }
}

.str-field {
  font-size: 1.6rem;
  line-height: 4.5rem;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: auto;
  max-width: 100%;
  height: 4.5rem;
  padding: 0 2rem;
  color: #5d5a55;
  border: 0;
  -webkit-border-radius: 2.25rem;
          border-radius: 2.25rem;
  outline: none;
  background-color: #fff;
  -webkit-transition: background-color .2s;
  transition: background-color .2s;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

@media (max-width: 768px) {
  .str-field {
    font-size: 1.4rem;
  }
}

@media (max-width: 480px) {
  .str-field {
    line-height: 4rem;
    height: 4rem;
  }
}

.str-field::-webkit-input-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: 0;
  opacity: 1;
  color: rgba(93, 90, 85, 0.5);
}

.str-field::-moz-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: 0;
  opacity: 1;
  color: rgba(93, 90, 85, 0.5);
}

.str-field:-ms-input-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: 0;
  opacity: 1;
  color: rgba(93, 90, 85, 0.5);
}

.str-field::placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: 0;
  opacity: 1;
  color: rgba(93, 90, 85, 0.5);
}

.str-field:focus::-webkit-input-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: -100%;
  opacity: 0;
  color: rgba(93, 90, 85, 0);
}

.str-field:focus::-moz-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: -100%;
  opacity: 0;
  color: rgba(93, 90, 85, 0);
}

.str-field:focus:-ms-input-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: -100%;
  opacity: 0;
  color: rgba(93, 90, 85, 0);
}

.str-field:focus::placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: -100%;
  opacity: 0;
  color: rgba(93, 90, 85, 0);
}

.str-field_full-width {
  width: 100%;
}

.str-field_bg-opacity {
  background-color: rgba(255, 255, 255, 0.6);
}

.str-field_bg-opacity:focus {
  background-color: #fff;
}

.str-field_with-icon {
  padding-left: 6.5rem;
  background-image: -webkit-gradient(linear, left top, right top, color-stop(4.5rem, #f0efea), color-stop(4.5rem, transparent));
  background-image: -webkit-linear-gradient(left, #f0efea 4.5rem, transparent 4.5rem);
  background-image: linear-gradient(to right, #f0efea 4.5rem, transparent 4.5rem);
}

.str-field_with-icon + svg {
  font-size: 1.6rem;
  height: 4.5rem;
  position: absolute;
  top: 0;
  left: 1.5rem;
  display: block;
  margin: auto;
  color: #c5cace;
}

@media (max-width: 480px) {
  .str-field_with-icon + svg {
    height: 4rem;
  }
}

.str-field_mini {
  line-height: 3rem;
  height: 3rem;
  -webkit-border-radius: 1rem;
          border-radius: 1rem;
  padding: 0 1rem;
}

.file-field {
  font-size: 16px;
  color: #444;
}

.text-field {
  font-size: 1.6rem;
  line-height: 1;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  width: auto;
  max-width: 100%;
  padding: 1.5rem 2rem;
  min-height: 14rem;
  color: #5d5a55;
  border: 0;
  -webkit-border-radius: 2.25rem;
          border-radius: 2.25rem;
  outline: none;
  background-color: #fff;
}

.text-field_fixed {
  max-height: 14rem;
  height: 14rem;
}

@media (max-width: 768px) {
  .text-field {
    font-size: 1.4rem;
  }
}

.text-field_full-width {
  width: 100%;
}

.text-field_bg-opacity {
  -webkit-transition: background-color .2s;
  transition: background-color .2s;
  background-color: rgba(255, 255, 255, 0.6);
}

.text-field_bg-opacity:focus {
  background-color: #fff;
}

.text-field::-webkit-input-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: 0;
  opacity: 1;
  color: rgba(93, 90, 85, 0.5);
}

.text-field::-moz-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: 0;
  opacity: 1;
  color: rgba(93, 90, 85, 0.5);
}

.text-field:-ms-input-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: 0;
  opacity: 1;
  color: rgba(93, 90, 85, 0.5);
}

.text-field::placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: 0;
  opacity: 1;
  color: rgba(93, 90, 85, 0.5);
}

.text-field:focus::-webkit-input-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: -100%;
  opacity: 0;
  color: rgba(93, 90, 85, 0);
}

.text-field:focus::-moz-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: -100%;
  opacity: 0;
  color: rgba(93, 90, 85, 0);
}

.text-field:focus:-ms-input-placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: -100%;
  opacity: 0;
  color: rgba(93, 90, 85, 0);
}

.text-field:focus::placeholder {
  -webkit-transition: text-indent .75s,color .75s,opacity .75s;
  transition: text-indent .75s,color .75s,opacity .75s;
  text-indent: -100%;
  opacity: 0;
  color: rgba(93, 90, 85, 0);
}

.check-field {
  font-size: 0;
  display: inline-block;
  cursor: pointer;
}

.check-field__label {
  font-size: 1.6rem;
  margin: 0 0 0 1rem;
}

.check-field__input[type="checkbox"] {
  display: none;
}

.check-field__input[type="checkbox"] + .check-field__fake-check {
  font-size: 0;
  line-height: 2rem;
  width: 2rem;
  height: 2rem;
  -webkit-transition: background-color .2s;
  transition: background-color .2s;
  text-align: center;
  color: #fff;
  -webkit-border-radius: .2rem;
          border-radius: .2rem;
  background-color: #fff;
}

.check-field__input[type="checkbox"] + .check-field__fake-check svg {
  font-size: 1.2rem;
  -webkit-transition: opacity .2s;
  transition: opacity .2s;
  opacity: 0;
}

.check-field__input[type="checkbox"]:checked + .check-field__fake-check {
  background: #6c9c5a;
}

.check-field__input[type="checkbox"]:checked + .check-field__fake-check svg {
  opacity: 1;
}

.radio-field {
  font-size: 0;
  cursor: pointer;
}

.radio-field__label {
  font-size: 1.6rem;
  margin: 0 0 0 1rem;
  -webkit-transition: color .2s;
  transition: color .2s;
}

.radio-field__input[type="radio"] {
  display: none;
}

.radio-field__input[type="radio"] + .radio-field__fake-radio {
  position: relative;
  width: 2rem;
  height: 2rem;
  -webkit-border-radius: 50%;
          border-radius: 50%;
  background-color: #fff;
}

.radio-field__input[type="radio"] + .radio-field__fake-radio:after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: block;
  width: .8rem;
  height: .8rem;
  margin: auto;
  content: "";
  -webkit-transition: background-color .2s,-webkit-transform .2s;
  transition: background-color .2s,-webkit-transform .2s;
  transition: background-color .2s,transform .2s;
  transition: background-color .2s,transform .2s,-webkit-transform .2s;
  -webkit-transform: scale(0);
      -ms-transform: scale(0);
          transform: scale(0);
  -webkit-border-radius: 50%;
          border-radius: 50%;
  background-color: rgba(108, 156, 90, 0);
}

.radio-field__input[type="radio"]:checked + .radio-field__fake-radio:after {
  -webkit-transform: scale(1);
      -ms-transform: scale(1);
          transform: scale(1);
  background-color: #6c9c5a;
}

.radio-field__input[type="radio"]:checked + .radio-field__fake-radio + .radio-field__label {
  color: #6c9c5a;
}

._error {
  background-color: #f3c0c0;
  color: #cc3333;
}

._error::-webkit-input-placeholder {
  color: #cc9999;
}

._error::-moz-placeholder {
  color: #cc9999;
}

._error:-ms-input-placeholder {
  color: #cc9999;
}

._error::placeholder {
  color: #cc9999;
}

._error[type="checkbox"] + .check-field__fake-check {
  background-color: #f3c0c0;
}

._error[type="radio"] + .radio-field__fake-radio {
  background-color: #f3c0c0;
}

.str-field_bg-opacity._error,
.text-field_bg-opacity._error {
  background-color: rgba(243, 192, 192, 0.6);
}

.btn {
  font-family: "Roboto Medium", sans-serif;
  font-size: 1.6rem;
  line-height: 4.5rem;
  display: inline-block;
  overflow: hidden;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  height: 4.5rem;
  padding: 0 2rem;
  -webkit-transition: border-color .2s linear, background-color .2s linear;
  transition: border-color .2s linear, background-color .2s linear;
  text-align: center;
  text-decoration: none;
  color: #fff;
  -webkit-border-radius: 2.25rem;
          border-radius: 2.25rem;
  background-color: #6c9c5a;
  border: 0;
}

.btn:hover {
  background-color: #618c51;
}

.btn_small {
  height: 2.2rem;
  line-height: 2.2rem;
  padding: 0 1rem;
  font-size: 1.14286rem;
}

.btn_with-icon svg {
  display: inline-block;
  vertical-align: middle;
  font-size: 2rem;
  margin: -.1rem 1rem 0 0;
}

.btn_wide {
  padding: 0 2.7rem;
}

.btn_clear {
  line-height: 4.3rem;
  border: 0.1rem solid #fff;
  background: transparent;
}

.btn_clear:hover {
  border-color: #729e19;
  background-color: #4e8839;
}

@media (max-width: 480px) {
  .btn {
    font-size: 1.4rem;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
